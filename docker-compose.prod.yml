version: '3.8'

services:
  # Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: aigallery-backend-prod
    environment:
      - DATABASE_URL=sqlite:///./gallery.db
      - SECRET_KEY=${SECRET_KEY}
      - ALIST_URL=${ALIST_URL:-http://alist:5244}
      - ALIST_USERNAME=${ALIST_USERNAME}
      - ALIST_PASSWORD=${ALIST_PASSWORD}
      - ALIST_TOKEN=${ALIST_TOKEN}
      - ALIST_UPLOAD_PATH=${ALIST_UPLOAD_PATH:-/gallery}
    volumes:
      - ./data/gallery.db:/app/gallery.db
    depends_on:
      - alist
    networks:
      - aigallery
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: aigallery-frontend-prod
    networks:
      - aigallery
    restart: unless-stopped

  # Alist
  alist:
    image: xhofe/alist:latest
    container_name: aigallery-alist-prod
    restart: unless-stopped
    volumes:
      - alist_data:/opt/alist/data
      - ./data/alist:/opt/alist/data/storage
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
    networks:
      - aigallery
    restart: unless-stopped

  # Nginx
  nginx:
    image: nginx:alpine
    container_name: aigallery-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./data/uploads:/var/www/uploads:ro
    depends_on:
      - backend
      - frontend
      - alist
    networks:
      - aigallery
    restart: unless-stopped

volumes:
  alist_data:

networks:
  aigallery:
    driver: bridge